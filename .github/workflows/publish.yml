# This workflow will do a clean install of node dependencies, build the source code and run tests and deploy to binary repo
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Publish

on:
  push:
    branches: ['master', 'develop', 'uat']
    # tags: ['*'] #todo work out how to get tag name reliably to send to next repo

jobs:
  build:
    name: "build test and deploy"
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2
      - name: Cache
        uses: actions/cache@v2.1.3
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: node_modules
          # An explicit key for restoring and saving the cache
          key: foodpantry-labelbuster-node_modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            foodpantry-labelbuster-node_modules-${{ hashFiles('package-lock.json') }}
            foodpantry-labelbuster-node_modules-
            foodpantry-labelbuster

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
      - run: npm run lint
      - run: npm run build
      - run: npm run test

      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: |
            dist

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: display branch name
        shell: bash
        run: echo "${{ steps.extract_branch.outputs.branch }}"

      - name: Publish
        uses: qld-gov-au/gha-publish-to-git@master
        with:
          repository: ${{ secrets.TARGET_REPO }}
          branch: '${{ steps.extract_branch.outputs.branch }}'
          github_token: '${{ secrets.GH_TOKEN }}'
          github_pat: '${{ secrets.GH_PAT }}'
          source_folder: dist
        if: success()
